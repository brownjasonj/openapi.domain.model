openapi: 3.0.3
info:
  version: 0.0.1
  title: OpenAPI Course
  description: 'Specification for OpenAPI Course'
servers:
  - url: https://dev.example.com
    description: Development Server
  - url: https://qa.example.com
    description: QA
  - url: https://prod.example.com
    description: Production
paths:
  /v1/customers:
    get:
      summary: List Customers
      description: Get a list of customers
      deprecated: false
      parameters:
        - $ref: "#/components/parameters/page_number_parameter"
        - $ref: "#/components/parameters/page_size_parameter"
      responses:
        '200':
          description: List of Customers
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/customer-paged-list"

  /v1/customers/{customer_id}:
    get:
      summary: Get a Customer by its id
      description: Get a single Customer by its Id
      parameters:
        - name: customer_id
          in: path
          description: Customer id
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Found Customer
          content:
            application/json:
              schema:
                $ref: "https://github.com/brownjasonj/openapi.domain.model/blob/master/schemas/counterparty/counterparty.yaml#/components/schemas/customer"

components:
  parameters:
    page_number_parameter:
      name: pageNumber
      in: query
      description: Page Number
      required: false
      schema:
        type: integer
        format: int32
        default: 1
    page_size_parameter:
      name: pageSize
      in: query
      description: Page Size
      required: false
      schema:
        type: integer
        format: int32
        default: 25

  schemas:
    customer:
      type: object
      properties:
        id:
          type: string
          format: uuid
        firstName:
          type: string
          example: "Kenny"
        lastName:
          type: string
          example: "Doe"
        address:
          $ref: "../../schemas/counterparty/counterparty_address.yaml#/components/schemas/counterparty_address"

    customer-list:
      type: array
      description: List of Customers
      items:
        $ref: "#/components/schemas/customer"

    customer-paged-list:
      type: object
      properties:
        content:
          $ref: "#/components/schemas/customer-list"
      allOf:
        - $ref: "#/components/schemas/paged_response"

    paged_response:
      type: object
      properties:
        pageable:
          $ref: '#/components/schemas/paged_response_pageable'
        totalPages:
          type: integer
          format: int32
        last:
          type: boolean
        totalElements:
          type: integer
          format: int32
        size:
          type: integer
          format: int32
        number:
          type: integer
          format: int32
        numberOfElements:
          type: integer
          format: int32
        sort:
          $ref: '#/components/schemas/paged_response_pageable_sort'
        first:
          type: boolean

    paged_response_pageable_sort:
      type: object
      properties:
        sorted:
          type: boolean
        unsorted:
          type: boolean

    paged_response_pageable:
      type: object
      properties:
        sort:
          $ref: '#/components/schemas/paged_response_pageable_sort'
        offset:
          type: integer
          format: int32
        pageNumber:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        paged:
          type: boolean
        unpaged:
          type: boolean
